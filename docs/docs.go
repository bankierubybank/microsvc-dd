// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/debug": {
            "get": {
                "description": "Get debug information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "debug"
                ],
                "summary": "Get debug information",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/tarots/": {
            "get": {
                "description": "Get all tarot cards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tarot"
                ],
                "summary": "Get all tarot cards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TarotModel"
                            }
                        }
                    }
                }
            }
        },
        "/tarots/random": {
            "get": {
                "description": "Get a random tarot card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tarot"
                ],
                "summary": "Get a random tarot card",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TarotModel"
                        }
                    }
                }
            }
        },
        "/tarots/{id}": {
            "get": {
                "description": "Get a tarot card by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tarot"
                ],
                "summary": "Get a tarot card by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tarot ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TarotModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.TarotModel": {
            "type": "object",
            "required": [
                "cardname",
                "id",
                "imageurl",
                "number",
                "type"
            ],
            "properties": {
                "cardname": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "string"
                },
                "id": {
                    "type": "string",
                    "maxLength": 15,
                    "example": "string"
                },
                "imageurl": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "string"
                },
                "number": {
                    "type": "string",
                    "maxLength": 15,
                    "example": "string"
                },
                "type": {
                    "type": "string",
                    "maxLength": 63,
                    "example": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0-rc",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Microsvc-dd",
	Description:      "This is a sample API for learning microservices",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
